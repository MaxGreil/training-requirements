knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(tidyverse))
suppressMessages(library(downloader))
suppressMessages(library(plotly))
suppressMessages(library(car))
suppressMessages(library(dunn.test))
suppressMessages(library(broom))
dat <- read.csv('gapminder_clean.csv')
dim(dat)
View(dat)
dat <- readr::read.csv('gapminder_clean.csv')
dat <- readr::read.csv('gapminder_clean.csv')
dat <- read.csv('gapminder_clean.csv')
dim(dat)
dat
library(readr)
dat <- read.csv('gapminder_clean.csv')
dim(dat)
dat
?read_csv
dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
ggplot(aes(x = gdpPercap, y = CO2.emissions..metric.tons.per.capita.)) +
geom_point() +
ylab("CO2 emissions (metric tons per capita)")
View(dat)
dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
ggplot(aes(x = gdpPercap, y = CO2.emissions..metric.tons.per.capita.)) +
geom_point() +
ylab("CO2 emissions (metric tons per capita)")
# Because of one very large outlier the analysis repreated with log transformed data
dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter_at(vars(CO2.emissions..metric.tons.per.capita., gdpPercap), all_vars(!is.na(.))) %>%
ggplot(aes(x = log(gdpPercap), y = log(CO2.emissions..metric.tons.per.capita.))) +
geom_point() +
ylab("log(CO2 emissions (metric tons per capita))")
t = dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
ggplot(aes(x = gdpPercap, y = CO2.emissions..metric.tons.per.capita.)) +
geom_point() +
ylab("CO2 emissions (metric tons per capita)")
t = dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.)))
View(t)
t = dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter_at(vars(CO2.emissions..metric.tons.per.capita., gdpPercap), all_vars(!is.na(.)))
t = dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
ggplot(aes(x = gdpPercap, y = CO2.emissions..metric.tons.per.capita.)) +
geom_point() +
ylab("CO2 emissions (metric tons per capita)")
# Because of one very large outlier the analysis repreated with log transformed data
t = dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
ggplot(aes(x = log(gdpPercap), y = log(CO2.emissions..metric.tons.per.capita.))) +
geom_point() +
ylab("log(CO2 emissions (metric tons per capita))")
dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
ggplot(aes(x = gdpPercap, y = CO2.emissions..metric.tons.per.capita.)) +
geom_point() +
ylab("CO2 emissions (metric tons per capita)")
# Because of one very large outlier the analysis repreated with log transformed data
dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
ggplot(aes(x = log(gdpPercap), y = log(CO2.emissions..metric.tons.per.capita.))) +
geom_point() +
ylab("log(CO2 emissions (metric tons per capita))")
dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
pivot_longer( gdpPercap, names_to = "x_var", values_to = "x_val") %>%
pivot_longer( CO2.emissions..metric.tons.per.capita., names_to = "y_var", values_to = "y_val") %>%
group_by(x_var, y_var) %>%
summarise(cor_coef = cor.test(x_val, y_val)$estimate,
p_val = cor.test(x_val, y_val)$p.value)
# Because of one very large outlier the analysis repreated with log transformed data
dat %>%
filter(Year == 1962) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
pivot_longer( gdpPercap, names_to = "x_var", values_to = "x_val") %>%
pivot_longer( CO2.emissions..metric.tons.per.capita., names_to = "y_var", values_to = "y_val") %>%
group_by(x_var, y_var) %>%
# calculate pearson R value and associated p value
summarise(cor_coef = cor.test(log(x_val), log(y_val))$estimate,
p_val = cor.test(log(x_val), log(y_val))$p.value)
year.cor.max <- dat %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
# split origial tibble in lists depending on the year
split(.$Year) %>%
# perform pearson correlation test on each year list, keep only the pearson R value
map(~cor.test(log(.$CO2.emissions..metric.tons.per.capita.), log(.$gdpPercap))$estimate) %>%
# merge list of lists to one final list
unlist
year.cor.max
year.cor.max[which.max(year.cor.max)]
viz <- dat %>%
filter(Year == 2002) %>%
# remove rows which contain NAs
filter(across(c(CO2.emissions..metric.tons.per.capita., gdpPercap), ~ !is.na(.))) %>%
ggplot(aes(x = log(gdpPercap), y = log(CO2.emissions..metric.tons.per.capita.), text=paste0('</br>log(gdpPercap): ', gdpPercap, '</br>log(CO2 emissions (metric tons per capita)): ', CO2.emissions..metric.tons.per.capita., '</br>population: ', pop, '</br>continent: ', continent, '</br>Country Name: ', Country.Name))) +
geom_point(aes(size = pop, color = continent)) +
ylab("log(CO2 emissions (metric tons per capita))")
ggplotly(viz, tooltip = c("text"))
dat %>%
filter(continent != "") %>%
# remove rows which contain NAs
filter(across(Energy.use..kg.of.oil.equivalent.per.capita., ~ !is.na(.))) %>%
ggplot(aes(x=continent, y=Energy.use..kg.of.oil.equivalent.per.capita., fill = continent)) +
geom_boxplot() +
ylab("Energy use (kg of oil equivalent per capita)")
